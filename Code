Academia de Studii Economice
Facultatea de Cibernetică, Statistică și Informatică Economică

PROIECT BAZE DE DATE

MAGAZIN DE ECHIPAMENTE MEDICALE

Lungu Costin

București 2020
 
Cuprins

Introducere	3
Crearea tabelelor	4
Modificarea tabelelor create	6
Modificarea datelor	11
Interogarea tabelelor	12
Jonctiuni intre relatii	17
Interogari subordonate	18
Functii predefinite	19
Functii de grup	23
Operatorii algebrei relationale	24
Tabele virtuale	25
Indecsi	26
Sinonime	27
Secvente	28
Clustere	29
Scripturi folosite	30
 
Introducere

Am ales crearea unei baze de date pentru o firma de  echipamente medicale, în vederea căruia am stocat date în 6 tabele, conectate între ele prin tipurile de legături dobândite în urma parcurgerii seminariilor.
Firma de echipamente medicale oferă clienților produse multiple ce sunt obținute în urma cumpărării de la mai mulți furnizori. În cadrul magazinului există angajați organizați pe mai multe raioane, în funcție de produsele specifice vândute, respectiv pe fizioterapie, cardiologie și estetică medicală.
Pentru ca magazinul de echipamente medicale să gestioneze fluxul de produse, a fost creată baza de date cu următoarele tabele și relații:

SCHIȚĂ TABELELOR BAZEI DE DATE
  
Crearea tabelelor

CREATE TABLE ANGAJATI
(ID_ANGAJAT NUMBER(10) CONSTRAINT pk_angajati PRIMARY KEY,
NUME_ANGAJAT VARCHAR2(20) NOT NULL,
PRENUME_ANGAJAT VARCHAR2(30) NOT NULL,
CNP NUMBER(13) NOT NULL,
ID_RAION NUMBER(5) NOT NULL,
SALARIU_ANGAJAT NUMBER (10) NOT NULL,
TELEFON_ANGAJAT NUMBER(15) NOT NULL
);


CREATE TABLE RAIOANE
(
ID_RAION NUMBER(10) CONSTRAINT pk_raioane PRIMARY KEY,
DENUMIRE_RAION VARCHAR2(20) NOT NULL
);
 

CREATE TABLE PRODUSE
(
ID_PRODUS NUMBER(10) CONSTRAINT pk_produse PRIMARY KEY,
NUME_PRODUS VARCHAR2(30) NOT NULL,
PRET_PRODUS NUMBER(10) NOT NULL,
DETALII_PRODUS VARCHAR2(50) NOT NULL
);
 

 
CREATE TABLE CLIENTI
(
ID_CLIENT NUMBER(10) CONSTRAINT pk_clienti PRIMARY KEY,
NUME_CLIENT VARCHAR2(20) NOT NULL,
EMAIL_CLIENT VARCHAR2(30) NOT NULL,
TELEFON_CLIENT NUMBER(15) NOT NULL
);

 

CREATE TABLE FURNIZORI
(
ID_FURNIZOR NUMBER(10) NOT NULL,
NUME_FURNIZOR VARCHAR2(20) NOT NULL,
ID_PRODUS NUMBER(10),
PRET_PRODUS NUMBER(10) NOT NULL,
CANTITATE_PRODUS NUMBER(10) NOT NULL,
PRIMARY KEY (ID_FURNIZOR, ID_PRODUS)
);

 

CREATE TABLE COMENZI
(
ID_COMANDA NUMBER(10) CONSTRAINT pk_comenzi PRIMARY KEY,
ID_CLIENT NUMBER(10) NOT NULL,
ID_ANGAJAT NUMBER(10) NOT NULL,
ID_PRODUS NUMBER(10) NOT NULL,
PRET_PRODUS NUMBER(10) NOT NULL,
CANTITATE_PRODUS NUMBER(10) NOT NULL,
DATA_COMANDA DATE NOT NULL
);
 
Modificarea tabelelor create

Adăugare FOREIGN KEY tabelelor create:
ALTER TABLE ANGAJATI
ADD FOREIGN KEY (ID_RAION) REFERENCES RAIOANE (ID_RAION);

 
 
ALTER TABLE FURNIZORI
ADD FOREIGN KEY (ID_PRODUS) REFERENCES PRODUSE (ID_PRODUS);

ALTER TABLE COMENZI
ADD FOREIGN KEY (ID_PRODUS) REFERENCES PRODUSE (ID_PRODUS);

ALTER TABLE COMENZI
ADD FOREIGN KEY (ID_CLIENT) REFERENCES CLIENTI (ID_CLIENT);

ALTER TABLE COMENZI
ADD FOREIGN KEY (ID_ANGAJAT) REFERENCES ANGAJATI (ID_ANGAJAT);

 
Modificarea tabelelor:
Ștergerea unei tabele, inclusiv cu restricțiile acesteia:

DROP TABLE FURNIZORI CASCADE CONSTRAINTS;

 
 
Recuperarea tabelei FURNIZORI:
FLASHBACK TABLE FURNIZORI TO BEFORE DROP;

 


Adăugarea coloanei ID_FURNIZOR in tabela PRODUSE
ALTER TABLE PRODUSE
ADD(ID_FURNIZOR NUMBER (10));
 

Modificare unei coloane:
ALTER TABLE ANGAJATI
MODIFY (SALARIU_ANGAJAT NUMBER(10));
 
Modificare numelui unui produs:
UPDATE PRODUSE
SET NUME_PRODUS=’SPIROMETRU’
WHERE ID_PRODUS=12
 

Redenumire coloana:
ALTER TABLE CLIENTI
RENAME COLUMN PRENUME_CLIENT TO EMAIL;
 

 
Adăugare date despre ANGAJAȚI:
INSERT INTO ANGAJATI VALUES (1,'Ion','Marin',1700909534123,11,2500,0745125613);
INSERT INTO ANGAJATI VALUES (2,'Agache','Vasile',1770305334673,11,2800,0765375468);
INSERT INTO ANGAJATI VALUES (3,'Oprea','Ileana',2801122536773,22,3000,0725892613);
INSERT INTO ANGAJATI VALUES (4,'Popa','Silviu',1730325535579,22,2600,0726303489);
INSERT INTO ANGAJATI VALUES (5,'Enache','George',1600909534123,33,2700,0767589135);
INSERT INTO ANGAJATI VALUES (6,'Popescu','Ionut',1800909532742,22,3500,0745365734);
INSERT INTO ANGAJATI VALUES (7,'Pop','Andreea',2870305333647,33,3800,0765465824);
INSERT INTO ANGAJATI VALUES (8,'Radu','Ioana',2801122534724,33,5000,0725365824);
INSERT INTO ANGAJATI VALUES (9,'Ionescu','Pavel',1930325532734,33,4600,0726375437);
INSERT INTO ANGAJATI VALUES (10,'Dumitru','Iacob',1900909537458,11,5700,0767264713);
INSERT INTO ANGAJATI VALUES (11, 'Crin', 'Marin', 1840422534099, 22, 3900, 0728293412) commit; 

Adăugare date despre PRODUSE:
INSERT INTO PRODUSE VALUES (10,'CPMOTION',5900,'FIZIOTERAPIE');
INSERT INTO PRODUSE VALUES (11,'TECAR',9200,'FIZIOTERAPIE');
INSERT INTO PRODUSE VALUES (12,'SPIROMETRIE',4500,'CARDIOLOGIE');
INSERT INTO PRODUSE VALUES (13,'EKG',7500,'CARDIOLOGIE');
INSERT INTO PRODUSE VALUES (14,'EMSCULPT',8300,'ESTETICA');
Commit;
 


Adăugare tipuri de raioane:
INSERT INTO RAIOANE VALUES (11,'FIZIOTERAPIE');
INSERT INTO RAIOANE VALUES (22,'CARDIOLOGIE');
INSERT INTO RAIOANE VALUES (33,'ESTETICA');
 

 
Adăugare informații despre furnizori:
INSERT INTO FURNIZORI VALUES (100,'WINBACK',11,9200,30);
INSERT INTO FURNIZORI VALUES (100,'WINBACK',12,4500,15);
INSERT INTO FURNIZORI VALUES (101,'BTL',10,5900,19);
INSERT INTO FURNIZORI VALUES (101,'BTL',13,7500,32);
INSERT INTO FURNIZORI VALUES (102,'LINEMED',14,8300,17);
COMMIT;
 

Adăugare informații despre clienți:
INSERT INTO CLIENTI VALUES (1,'MERAMED','CONTACT@MERAMED.RO',0726781899);
INSERT INTO CLIENTI VALUES (2,'SANTEVIE','CONTACT@SANTEVIE.RO',0745167773);
INSERT INTO CLIENTI VALUES (3,'BEHEALTH','CONTACT@BEHEALTH.RO',0736458195);
INSERT INTO CLIENTI VALUES (4,'MEDICOVER','CONTACT@MEDICOVER.RO',0729793455);
INSERT INTO CLIENTI VALUES (5,'SANOHELP','CONTACT@SANOHELP.RO',0744852456);
INSERT INTO CLIENTI VALUES (6,'VIVAMED','CONTACT@VIVAMED.RO',0726523647);
INSERT INTO CLIENTI VALUES (7,'SFANTULSAVA','CONTACT@SFANTULSAVA.RO',0745373536);
INSERT INTO CLIENTI VALUES (8,'SANOVITA','CONTACT@SANOVITA.RO',0736039456);
INSERT INTO CLIENTI VALUES (9,'PROVITA','CONTACT@PROVITA.RO',0729012599);
INSERT INTO CLIENTI VALUES (10,'REGINAMARIA','CONTACT@REGINAMARIA.RO',0744346729);
Commit;
 

Adăugarea COMENZILOR:
INSERT INTO COMENZI VALUES (1,1,2,11,9200,3,to_date('13-02-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (2,2,3,12,4500,4,to_date('23-03-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (3,4,1,11,9200,2,to_date('17-05-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (4,1,2,10,5900,1,to_date('15-04-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (5,3,1,10,5900,2,to_date('26-01-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (6,5,5,14,8300,4,to_date('14-02-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (7,4,4,13,7500,3,to_date('20-05-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (8,6,7,11,9200,2,to_date('23-04-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (9,7,8,12,4500,5,to_date('13-02-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (10,9,6,11,9200,3,to_date('27-04-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (11,10,7,10,5900,4,to_date('25-03-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (12,8,6,10,5900,7,to_date('16-03-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (13,10,10,14,8300,4,to_date('24-02-2020','DD-MM-YYYY'));
INSERT INTO COMENZI VALUES (14,9,9,13,7500,6,to_date('30-01-2020','DD-MM-YYYY'));
Commit;
 

Modificarea datelor
Actualizarea numărului de telefon pentru clientul cu numărul 4
UPDATE CLIENTI
SET TELEFON_CLIENT='0736456852'
WHERE ID_CLIENT=4;    

Ștergerea comenzii cu id-ul nr 6
DELETE FROM COMENZI
WHERE ID_COMANDA='6';
 
 
 
Anularea comenzii anterioare de stergere a comenzii cu id nr 6:
ROLLBACK;
 

Interogarea tabelelor
Afisarea comenzilor:
SELECT *
FROM COMENZI;
 

Afisarea angajatilor al caror salarii sunt mai mari de 2750 lei:
SELECT *
FROM ANGAJATI
WHERE SALARIU_ANGAJAT> 2750;
 
 
Afisarea clientilor al caror nume incepe cu litera M:
SELECT  * 
FROM CLIENTI
WHERE (NUME_CLIENT) LIKE 'M%';
 

Ordonarea DESCENDENTA a ANGAJATILOR dupa SALARIU:

SELECT DISTINCT NUME_ANGAJAT, PRENUME_ANGAJAT, SALARIU_ANGAJAT
FROM ANGAJATI
ORDER BY SALARIU_ANGAJAT DESC;

 

Ordonarea ASCENDENTA a angajatilor dupa NUME:
SELECT DISTINCT NUME_ANGAJAT, PRENUME_ANGAJAT, SALARIU_ANGAJAT
FROM ANGAJATI
ORDER BY NUME_ANGAJAT ASC;

 

 
Afisarea produselor mai ieftine de 7000 de lei:
SELECT *
FROM PRODUSE
WHERE PRET_PRODUS < 7000;

 

Afisarea angajatilor de pe raionul FIZIOTERAPIE, al carui id este 11:
SELECT *
FROM ANGAJATI
WHERE ID_RAION=11;

 

Corectarea unei greseli de inserare a datelor:
UPDATE ANGAJATI
SET CNP=2801122536773
WHERE ID_ANGAJAT=3;

 

  
Cresterea salariului angajatilor cu salariul mai mic de 3000 de lei:
UPDATE ANGAJATI
SET SALARIU_ANGAJAT=SALARIU_ANGAJAT+200
WHERE SALARIU_ANGAJAT<3000;
SELECT * FROM ANGAJATI;

 
 

Ordonarea comenzilor cu mai mult de 2 produse in functie de data achizitiei:
SELECT  * 
FROM COMENZI
WHERE CANTITATE_PRODUS >2
ORDER BY DATA_COMANDA;

 

Afisarea clientului si a datei comenzii in functie de produsul achizitionat:
SELECT ID_CLIENT, DATA_COMANDA
FROM COMENZI
WHERE ID_PRODUS=11;

 


Afisarea comenzilor din a doua parte a anului:
SELECT *
FROM COMENZI
WHERE DATA_COMANDA >=TO_DATE('01-06-2020','DD-MM-YYYY');

 

Afisarea comenzilor gestionate de catre angajatul cu id-ul nr 2 in prima jumatate a anului:
SELECT *
FROM COMENZI WHERE ID_ANGAJAT=2 
AND DATA_COMANDA<TO_DATE('01-07-2020','DD-MM-YYYY');

 

Aranjarea ascendentă comenzilor în funcție de valoarea totală a comenzii

SELECT ID_PRODUS, PRET_PRODUS, (C.PRET_PRODUS * C.CANTITATE_PRODUS) AS TOTAL
FROM COMENZI C
ORDER BY TOTAL;
 

 
Jonctiuni intre relatii

Jonctiunea de egalitate

Afisarea tuturor clientilor cu id-ul curent, impreuna cu numele, cantitatea si pretul produselor, ordonate descendent, in functie de data ultimei comenzi.

SELECT CL.NUME_CLIENT, CL.ID_CLIENT, PRO.NUME_PRODUS, COM.CANTITATE_PRODUS, COM.PRET_PRODUS, COM.DATA_COMANDA 
FROM CLIENTI CL,
COMENZI COM,
PRODUSE PRO
WHERE CL.ID_CLIENT=COM.ID_CLIENT
AND PRO.ID_PRODUS=COM.ID_PRODUS
ORDER BY DATA_COMANDA DESC;
 


JONCTIUNE EXTERNA
Afisarea tuturor produselor de pe raioane în ordine crescătoare în funcție de pretul produsului

SELECT PRO.*
FROM PRODUSE PRO,
RAIOANE RAI
WHERE PRO.DETALII_PRODUS=RAI.DENUMIRE_RAION(+)
ORDER BY PRET_PRODUS ASC;
 
 
Jonctiunea dintr-o tabela cu aceeasi tabela

Afisarea comenzilor din primele 5 luni ale anului cu id-ul clientului

SELECT COM.DATA_COMANDA ||' ESTE COMANDA DATA IN PRIMELE 5 LUNI ALE ANULUI DE CATRE CLIENTUL CU ID-UL '|| CO.ID_CLIENT
FROM COMENZI COM,
COMENZI CO
WHERE COM.ID_COMANDA=CO.ID_COMANDA
AND COM.DATA_COMANDA < TO_DATE('01-06-2020','DD-MM-YYYY');
 


Interogari subordonate

Afisarea clientilor care au cumparat produse CPMOTION:

SELECT CL.*
FROM CLIENTI CL,
COMENZI COM,
PRODUSE PRO
WHERE CL.ID_CLIENT=COM.ID_CLIENT
AND COM.ID_PRODUS=PRO.ID_PRODUS
AND NUME_PRODUS = (SELECT NUME_PRODUS
FROM PRODUSE
WHERE NUME_PRODUS ='CPMOTION');
 


 
Functii predefinite

LOWER() 
Afisarea produselor scrise cu litere mici

SELECT NUME_PRODUS, 
LOWER (NUME_PRODUS)
FROM PRODUSE;
 
UPPER() 
Afisarea angajatilor scrisi cu majuscule:

SELECT PRENUME_ANGAJAT,
UPPER (PRENUME_ANGAJAT)
FROM ANGAJATI;

 

INITCAP()
Afisarea numelor raioanelor, avand doar prima litera mare:

SELECT DENUMIRE_RAION, INITCAP(DENUMIRE_RAION)
FROM RAIOANE;
 


 
OPERATORUL DE CONCATENARE
Afisarea comenzilor din primele 5 luni ale anului cu id-ul clientului

SELECT COM.DATA_COMANDA ||' ESTE COMANDA DATA IN PRIMELE 5 LUNI ALE ANULUI DE CATRE CLIENTUL CU ID-UL '|| CO.ID_CLIENT
FROM COMENZI COM,
COMENZI CO
WHERE COM.ID_COMANDA=CO.ID_COMANDA
AND COM.DATA_COMANDA < TO_DATE('01-06-2020','DD-MM-YYYY');

 


CONCAT()
Afisarea numelui si prenumelui angajatilor:

SELECT CONCAT(NUME_ANGAJAT, PRENUME_ANGAJAT)
FROM ANGAJATI;
 

LENGTH()
Afisarea numarului de caractere dat de numele produselor

SELECT NUME_PRODUS, LENGTH(NUME_PRODUS)
FROM PRODUSE;
 

 
SUBSTR() 
Afisarea angajatilor nascuti in anii 1970

SELECT NUME_ANGAJAT, PRENUME_ANGAJAT, CNP
FROM ANGAJATI
WHERE SUBSTR(CNP,2,1)=7;
 

ROUND()
SELECT ROUND(73.976,5), 
ROUND(73.977,0) 
FROM DUAL;
 

SELECT ROUND(sysdate, 'MONTH') 
FROM DUAL;
 

TRUNC()
SELECT TRUNC(73.976,5), 
TRUNC(73.977,0) 
FROM DUAL;
 

SELECT TRUNC(sysdate, 'YEAR') 
FROM DUAL;
 

 
MONTH_BETWEEN()
Afisarea numarului de luni de la data comenzii:

SELECT DATA_COMANDA, ROUND(MONTHS_BETWEEN(sysdate, DATA_COMANDA)) NR_LUNI
FROM COMENZI;
 


TO_CHAR 
Afisarea datei la care s-a creat comanda in formatul LUNA-AN ('MM-YYYY'):

SELECT DATA_COMANDA, TO_CHAR(DATA_COMANDA,'MM-YYYY')
FROM COMENZI;
 


TO_DATE
Afisarea comenzilor din perioada 01.03.2020 - 31.10.2020

SELECT *
FROM COMENZI
WHERE DATA_COMANDA BETWEEN TO_DATE('01-03-2020','DD-MM-YYYY') AND TO_DATE('31-10-2020','DD-MM-YYYY');
 


Functii de grup

AVG, MAX, MIN, SUM valoarea maxima, valoarea medie, valoarea minima si valoarea totala a produselor comandate:

SELECT AVG(com.CANTITATE_PRODUS  *  com. PRET_PRODUS)
FROM COMENZI com;
 

SELECT MAX(com. CANTITATE_PRODUS *  com. PRET_PRODUS)
FROM COMENZI com;
 

SELECT MIN(com. CANTITATE_PRODUS  *  com. PRET_PRODUS)
FROM COMENZI com;
 

SELECT SUM(com. CANTITATE_PRODUS  *  com.PRET_PRODUS) 
FROM COMENZI com;
 



 
Operatorii algebrei relationale

Minus 

Afisarea angajatilor care au salariul cuprins intre 2400 si 3500, fara cei care au 3000:

SELECT * FROM angajati WHERE salariu_angajat BETWEEN 2400 AND 3500
MINUS
SELECT * FROM angajati WHERE salariu_angajat IN (3000);
 

UNION
AFISAREA COMENZILOR CARE AU CUMPARAT PRODUSE DIN DEPARTAMENTUL FIZIOTERAPIE
SELECT *
FROM COMENZI
WHERE ID_PRODUS=10
UNION
SELECT *
FROM COMENZI
WHERE ID_PRODUS=11;

 

 
Tabele virtuale
Crearea unei tabele virtuale:
CREATE OR REPLACE VIEW v_angajati
AS SELECT * FROM angajati
WHERE id_raion=12;
 

Afisarea informatiilor din tabela virtuala v_angajati:
SELECT * FROM v_angajati;
 

Actualizarea informatiilor din tabela virtuala prin cresterea salariului angajatilor cu 300 lei:
UPDATE v_angajati
SET salariu_angajat = salariu_angajat + 300;
 

Stergerea tabelei virtuale v_angajati
DROP VIEW v_angajati;
 
Indecsi

Vizualizarea indecsilor:

SELECT * 
FROM USER_INDEXES;
 
SELECT * FROM ANGAJATI 
WHERE UPPER(NUME_ANGAJAT) = 'OPREA';
 

Crearea unui index nou:
CREATE INDEX idx_upper_prenume ON ANGAJATI(UPPER(NUME_ANGAJAT));
 
 

Stergerea indexului:
 
 

Sinonime
Crearea sinonimelor pentru tabelele:
 

Listarea sinonimelor:
 

Stergerea sinonimelor:
 

 
Secvente
Creare secvente:
CREATE SEQUENCE seq_nrcomanda
START WITH 300 INCREMENT BY 50
MAXVALUE 1000 NOCYCLE;
 
Afisarea secventei:
SELECT * 
FROM USER_SEQUENCES;
 

Modificarea pasului de incrementare:
 

Stergerea secventei create:
 
 
Clustere
Creare cluster cls_idcomanda si a indexului idx_idcomanda:
 

Afisarea informatiilor despre cluster:
 

Stergerea clusterului creat:
 


 
Scripturi folosite

CREATE TABLE ANGAJATI
(ID_ANGAJAT NUMBER(10) CONSTRAINT pk_angajati PRIMARY KEY,
NUME_ANGAJAT VARCHAR2(20) NOT NULL,
PRENUME_ANGAJAT VARCHAR2(30) NOT NULL,
CNP NUMBER(13) NOT NULL,
ID_RAION NUMBER(5) NOT NULL,
SALARIU_ANGAJAT NUMBER (10) NOT NULL,
TELEFON_ANGAJAT NUMBER(15) NOT NULL
);

CREATE TABLE RAIOANE
(
ID_RAION NUMBER(10) CONSTRAINT pk_raioane PRIMARY KEY,,
DENUMIRE_RAION VARCHAR2(20) NOT NULL
);

CREATE TABLE PRODUSE
(
ID_PRODUS NUMBER(10) CONSTRAINT pk_produse PRIMARY KEY,
NUME_PRODUS VARCHAR2(30) NOT NULL,
PRET_PRODUS NUMBER(10) NOT NULL,
DETALII_PRODUS VARCHAR2(50) NOT NULL
);

CREATE TABLE CLIENTI
(
ID_CLIENT NUMBER(10) CONSTRAINT pk_clienti PRIMARY KEY,
NUME_CLIENT VARCHAR2(20) NOT NULL,
EMAIL_CLIENT VARCHAR2(30) NOT NULL,
TELEFON_CLIENT NUMBER(15) NOT NULL
);

CREATE TABLE FURNIZORI
(
ID_FURNIZOR NUMBER(10) NOT NULL,
NUME_FURNIZOR VARCHAR2(20) NOT NULL,
ID_PRODUS NUMBER(10),
PRET_PRODUS NUMBER(10) NOT NULL,
CANTITATE_PRODUS NUMBER(10) NOT NULL,
PRIMARY KEY (ID_FURNIZOR, ID_PRODUS)
);

CREATE TABLE COMENZI
(
ID_COMANDA NUMBER(10) CONSTRAINT pk_comenzi PRIMARY KEY,
DATA_COMANDA DATE NOT NULL,	
ID_CLIENT NUMBER(10) NOT NULL,
ID_ANGAJAT NUMBER(10) NOT NULL,
ID_PRODUS NUMBER(10) NOT NULL,
PRET_PRODUS NUMBER(10) NOT NULL,
CANTITATE_PRODUS NUMBER(10) NOT NULL
);

ALTER TABLE ANGAJATI
ADD FOREIGN KEY (ID_RAION) REFERENCES RAIOANE (ID_RAION);

ALTER TABLE FURNIZORI
ADD FOREIGN KEY (ID_PRODUS) REFERENCES PRODUSE (ID_PRODUS);

ALTER TABLE COMENZI
ADD FOREIGN KEY (ID_PRODUS) REFERENCES PRODUSE (ID_PRODUS);

ALTER TABLE COMENZI
ADD FOREIGN KEY (ID_CLIENT) REFERENCES CLIENTI (ID_CLIENT);

ALTER TABLE COMENZI
ADD FOREIGN KEY (ID_ANGAJAT) REFERENCES ANGAJATI (ID_ANGAJAT);

DROP TABLE FURNIZORI CASCADE CONSTRAINTS;

FLASHBACK TABLE FURNIZORI TO BEFORE DROP;

ALTER TABLE PRODUSE
ADD(ID_FURNIZOR NUMBER (10));

ALTER TABLE ANGAJATI
MODIFY (SALARIU_ANGAJAT NUMBER(10));

UPDATE PRODUSE
SET NUME_PRODUS=’SPIROMETRU’
WHERE ID_PRODUS=12

ALTER TABLE CLIENTI
RENAME COLUMN PRENUME_CLIENT TO EMAIL;

INSERT INTO ANGAJATI VALUES (1,'Ion','Marin',1700909534123,11,2500,0745125613);
INSERT INTO ANGAJATI VALUES (2,'Agache','Vasile',1770305334673,11,2800,0765375468);
INSERT INTO ANGAJATI VALUES (3,'Oprea','Ileana',2801122536773,22,3000,0725892613);
INSERT INTO ANGAJATI VALUES (4,'Popa','Silviu',1730325535579,22,2600,0726303489);
INSERT INTO ANGAJATI VALUES (5,'Enache','George',1600909534123,33,2700,0767589135);

INSERT INTO PRODUSE VALUES (10,'CPMOTION',5900,'FIZIOTERAPIE');
INSERT INTO PRODUSE VALUES (11,'TECAR',9200,'FIZIOTERAPIE');
INSERT INTO PRODUSE VALUES (12,'SPIROMETRIE',4500,'CARDIOLOGIE');
INSERT INTO PRODUSE VALUES (13,'EKG',7500,'CARDIOLOGIE');
INSERT INTO PRODUSE VALUES (14,'EMSCULPT',8300,'ESTETICA');

INSERT INTO RAIOANE VALUES (11,'FIZIOTERAPIE');
INSERT INTO RAIOANE VALUES (22,'CARDIOLOGIE');
INSERT INTO RAIOANE VALUES (33,'ESTETICA');

INSERT INTO FURNIZORI VALUES (100,'WINBACK',11,9200,10);
INSERT INTO FURNIZORI VALUES (100,'WINBACK',12,4500,5);
INSERT INTO FURNIZORI VALUES (101,'BTL',10,5900,9);
INSERT INTO FURNIZORI VALUES (101,'BTL',13,7500,12);
INSERT INTO FURNIZORI VALUES (102,'LINEMED',14,8300,7);

INSERT INTO CLIENTI VALUES (1,'MERAMED','CONTACT@MERAMED.RO',0726781899);
INSERT INTO CLIENTI VALUES (2,'SANTEVIE','CONTACT@SANTEVIE.RO',0745167773);
INSERT INTO CLIENTI VALUES (3,'BEHEALTH','CONTACT@BEHEALTH.RO',0736458195);
INSERT INTO CLIENTI VALUES (4,'MEDICOVER','CONTACT@MEDICOVER.RO',0729793455);
INSERT INTO CLIENTI VALUES (5,'ABEAUTYCLINIQUE','CONTACT@ABEAUTYCLINIQUE.RO',0744852456);

INSERT INTO comenzi VALUES (1,1,2,11,9200,3,to_date('13-01-2020','DD-MM-YYYY'));
INSERT INTO comenzi VALUES (2,2,3,12,4500,4,to_date('23-03-2020','DD-MM-YYYY'));
INSERT INTO comenzi VALUES (3,4,1,11,9200,2,to_date('17-06-2020','DD-MM-YYYY'));
INSERT INTO comenzi VALUES (4,1,2,10,5900,1,to_date('15-02-2020','DD-MM-YYYY'));
INSERT INTO comenzi VALUES (5,3,1,10,5900,2,to_date('26-09-2020','DD-MM-YYYY'));
INSERT INTO comenzi VALUES (6,5,5,14,8300,4,to_date('14-05-2020','DD-MM-YYYY'));
INSERT INTO comenzi VALUES (7,4,4,13,7500,3,to_date('20-10-2020','DD-MM-YYYY'));

UPDATE CLIENTI
SET TELEFON_CLIENT='0736456852'
WHERE ID_CLIENT=4; 

DELETE FROM COMENZI
WHERE ID_COMANDA='6';
ROLLBACK;

SELECT *
FROM COMENZI;

SELECT *
FROM ANGAJATI
WHERE SALARIU_ANGAJAT> 2750;

SELECT  * 
FROM CLIENTI
WHERE (NUME_CLIENT) LIKE 'M%';

SELECT DISTINCT NUME_ANGAJAT, PRENUME_ANGAJAT, SALARIU_ANGAJAT
FROM ANGAJATI
ORDER BY SALARIU_ANGAJAT DESC;

SELECT DISTINCT NUME_ANGAJAT, PRENUME_ANGAJAT, SALARIU_ANGAJAT
FROM ANGAJATI
ORDER BY NUME_ANGAJAT ASC;

SELECT *
FROM PRODUSE
WHERE PRET_PRODUS < 7000;

SELECT *
FROM ANGAJATI
WHERE ID_RAION=11;

UPDATE ANGAJATI
SET SALARIU_ANGAJAT=SALARIU_ANGAJAT+200
WHERE SALARIU_ANGAJAT<3000;
SELECT * FROM ANGAJATI;

SELECT  * 
FROM COMENZI
WHERE CANTITATE_PRODUS >2
ORDER BY DATA_COMANDA;

SELECT ID_CLIENT, DATA_COMANDA
FROM COMENZI
WHERE ID_PRODUS=11;

SELECT *
FROM COMENZI
WHERE DATA_COMANDA >=TO_DATE('01-06-2020','DD-MM-YYYY');

SELECT *
FROM COMENZI WHERE ID_ANGAJAT=2 
AND DATA_COMANDA<TO_DATE('01-07-2020','DD-MM-YYYY');
